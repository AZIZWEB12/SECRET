rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Profiles
    match /profiles/{userId} {
      allow get: if isOwner(userId) || isAdmin();
      allow update: if isOwner(userId) || isAdmin();
      
      // A user can create their own profile document.
      allow create: if isOwner(userId);
      
      // Allow reading the entire collection only to check for the first user during signup.
      // This is less secure. In production, a Cloud Function is recommended.
      allow list: if request.auth != null && request.query.limit == 1;
    }

    // Quiz Attempts
    match /quizAttempts/{attemptId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      // No updates or deletes allowed to preserve history
      allow update, delete: if false;
    }
    
    // Admins can read all attempts
     match /quizAttempts/{attemptId} {
      allow list: if isAdmin();
    }
  }
}
