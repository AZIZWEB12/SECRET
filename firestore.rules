rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    function isAdmin() {
      return exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is the owner of a document.
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Profiles:
    // - Anyone can create their own profile during signup.
    // - Users can read and update their own profile.
    // - Admins can read any profile (needed for the users list).
    // - Admins can update any profile (to manage premium status).
    match /profiles/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow list: if isAdmin();
    }

    // Quizzes:
    // - Admins can create, read, update, and delete any quiz.
    // - Any authenticated user can read (get) a quiz to take it.
    // - Any authenticated user can list quizzes.
    match /quizzes/{quizId} {
        allow read, list: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }
    
    // Quiz Attempts:
    // - Users can create their own attempt.
    // - Users can only read their own attempts.
    match /quizAttempts/{attemptId} {
        allow create: if request.auth != null;
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }

    // PDFs, Videos, Formations (Content):
    // - Any authenticated user can read/list content.
    // - Only admins can create, update, or delete content.
    match /{collection}/{docId} where collection in ['pdfs', 'videos', 'formations'] {
        allow read, list: if request.auth != null;
        allow create, update, delete: if isAdmin();
    }
    
    // Payments:
    // - Admins can manage all payments.
    match /payments/{paymentId} {
        allow read, list, create, update: if isAdmin();
    }
  }
}
