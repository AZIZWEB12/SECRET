rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Profiles
    match /profiles/{userId} {
      // Admins can see all profiles, users can only see their own.
      allow get: if request.auth.uid != null && (isOwner(userId) || get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin');
      
      // Admins can list all profiles for the admin dashboard.
      allow list: if request.auth.uid != null && get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';

      // Users can create their own profile document.
      allow create: if request.auth.uid != null && isOwner(userId);
      
      // Users can update their own profile. Admins can update any profile.
      allow update: if request.auth.uid != null && (isOwner(userId) || get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin');
    }
    
    // Quiz Attempts
    match /quizAttempts/{attemptId} {
      // A user can read their own quiz attempts. Admins can read any.
      allow get, list: if request.auth.uid != null && (request.query.where.userId == request.auth.uid || get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin');
      
      // A user can create their own quiz attempts.
      allow create: if request.auth.uid != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
