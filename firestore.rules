
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin.
    function isAdmin() {
      return get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if a user is the owner of a document.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Profiles:
    // - Users can create their own profile.
    // - Users can read their own profile.
    // - Users can update their own profile (displayName, phone, segment).
    // - Admins can read and update any profile.
    match /profiles/{userId} {
      allow create: if request.auth.uid == userId;
      allow get: if isOwner(userId) || isAdmin();
      allow update: if (isOwner(userId) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['displayName', 'phone', 'segment'])) || isAdmin();
      allow list: if isAdmin();
    }
    
    // Quiz Attempts:
    // - Users can create their own quiz attempts.
    // - Users can only read their own quiz attempts.
    match /quizAttempts/{attemptId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read: if isOwner(get(/databases/$(database)/documents/quizAttempts/$(attemptId)).data.userId) || isAdmin();
        allow list: if isAdmin() || (request.query.where.size() > 0 && request.query.where[0][0] == 'userId' && request.query.where[0][2] == request.auth.uid);
    }
    
    // Quizzes:
    // - Any authenticated user can read individual quizzes.
    // - Admins can create, update, delete, and list all quizzes.
    match /quizzes/{quizId} {
      allow get: if request.auth != null;
      allow list: if isAdmin();
      allow write: if isAdmin();
    }
    
    // PDFs, Videos, Formations:
    // - Any authenticated user can read the lists.
    // - Admins can manage the content.
    match /{collection}/{docId} where collection in ['pdfs', 'videos', 'formations'] {
        allow get, list: if request.auth != null;
        allow write: if isAdmin();
    }
    
    // Payments:
    // - Only admins can manage payments.
    match /payments/{paymentId} {
        allow read, write: if isAdmin();
    }
  }
}
