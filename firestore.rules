
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/profiles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/profiles/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Profiles:
    // - Users can create their own profile
    // - Users can read/update their own profile
    // - Admins can read/list/update all profiles
    match /profiles/{userId} {
      allow read, update: if isOwner(userId) || isAdmin();
      allow create: if isOwner(userId);
      allow list: if isAdmin();
    }

    // Quizzes:
    // - Anyone authenticated can read (get) a quiz
    // - Admins can create, update, delete, and list quizzes
    match /quizzes/{quizId} {
      allow get: if request.auth != null;
      allow list, create, update, delete: if isAdmin();
    }

    // Quiz Attempts:
    // - Users can create their own quiz attempts
    // - Users can only read/list their own quiz attempts
    match /quizAttempts/{attemptId} {
        allow create: if isOwner(get(request.resource.data.userId));
        allow get, list: if isOwner(resource.data.userId);
    }
    
    // PDFs, Videos, Formations:
    // - Authenticated users can read/list
    // - Admins can do anything
    match /{collection}/{docId}
      where collection in ['pdfs', 'videos', 'formations'] {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
